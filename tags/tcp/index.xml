<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tcp on silenceper blog</title>
    <link>https://silenceper.github.io/tags/tcp/</link>
    <description>Recent content in Tcp on silenceper blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 03 Jan 2016 15:40:59 +0800</lastBuildDate>
    <atom:link href="https://silenceper.github.io/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>tcp time_wait连接数过多导致服务不可用</title>
      <link>https://silenceper.github.io/blog/201601/tcp-time_wait%E8%BF%9E%E6%8E%A5%E6%95%B0%E8%BF%87%E5%A4%9A%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E4%B8%8D%E5%8F%AF%E7%94%A8/</link>
      <pubDate>Sun, 03 Jan 2016 15:40:59 +0800</pubDate>
      
      <guid>https://silenceper.github.io/blog/201601/tcp-time_wait%E8%BF%9E%E6%8E%A5%E6%95%B0%E8%BF%87%E5%A4%9A%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E4%B8%8D%E5%8F%AF%E7%94%A8/</guid>
      <description>

&lt;h1 id=&#34;问题出现:bfab40ae83425293fad5240da6e0e088&#34;&gt;问题出现：&lt;/h1&gt;

&lt;p&gt;在元旦前夕，自己维护的一个服务突然在高峰时期收到大量报警，赶紧登上服务器看一下：&lt;/p&gt;

&lt;p&gt;最开始的反应是memcache tcp read time out ,因为之前也出现过类似的警告所以开始尝试切换memcache，但是运维反馈已经切换了好几台还是不起作用。&lt;/p&gt;

&lt;p&gt;又看到有mysql 连接不上报错，怀疑机房内网有问题，然后有开始切换机房加机器，当时问题还是没有得到解决，这下真晕了。。。。 完全排查不出什么问题（因为是高峰时期，tcp连接数自然很高，没有在意是这个问题，自己预估不够）&lt;/p&gt;

&lt;p&gt;后来反应过来看到有好几个接口请求数增加，因为发版本的原因，是新版本才会请求这些接口，所以 我暂时屏蔽了这几个口接口问题得到遏制（幸好是用户感知不到的接口）。&lt;/p&gt;

&lt;h1 id=&#34;排查:bfab40ae83425293fad5240da6e0e088&#34;&gt;排查：&lt;/h1&gt;

&lt;p&gt;这个问题围绕我好几天，我屏蔽的那几个接口，反复看了好几遍，而且又将其中的sql查询分析，并没有慢请求。。。  这下又彻底懵了，没有头绪。&lt;/p&gt;

&lt;p&gt;说来也巧，高峰时期我用&lt;code&gt;netstat -an&lt;/code&gt; 命令查看了一些，看到大量tcp time_wait 的连接，赶紧Google了下，tcp time_wait状态是在主动关闭连接的一方保持的一个状态（一般指客户端），&lt;/p&gt;

&lt;p&gt;总共的连接数在近3w(ss -s可查)，其中有2w多都是这种连接，而且都是mysql 连接（这里边服务器程序就相当于客户端去连接mysql服务器），到这里心里大致有底了，把数据库连接池加上就好了，Golang提供了两个函数可进行配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;SetMaxOpenConns用于设置最大打开的连接数，默认值为0表示不限制。
SetMaxIdleConns用于设置闲置的连接数。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为项目提供的orm是没有主动的去关闭数据库的连接的，因为考虑到连接建立以及释放中间的消耗（提供的方案是通过连接池搞定）&lt;/p&gt;

&lt;p&gt;没有配置连接池，每次的都需要新建一个连接并进行处理，而且又没有进行关闭，这是导致tcp 出现大量time_wait的主要原因。&lt;/p&gt;

&lt;h1 id=&#34;反思:bfab40ae83425293fad5240da6e0e088&#34;&gt;反思：&lt;/h1&gt;

&lt;p&gt;问题终于找到解决，但是回过头来想了一下，其实一开始就可以定位到的，只是很多问题集中在一起出现反而让自己不知所措，这个时候如果是敏感的人的话应该马上能够从tcp状态上看出问题，之后线上遇到问题，重要的是先解决（不管通过什么方式），之后再一步步排查。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>