[{"author":null,"categories":["Tech"],"content":null,"date":1562025600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1562025600,"objectID":"69ca2994f16bcff3c12a2ccc7354971f","permalink":"http://silenceper.com/blog/201907/cluster-autoscaler-usage/","publishdate":"2019-07-02T00:00:00Z","readingtime":6,"relpermalink":"/blog/201907/cluster-autoscaler-usage/","section":"post","summary":"Cluster AutoScaler 是一个自动扩展和收缩 Kubernetes 集群 Node 的扩展。当集群容量不足时，它会自动去 Cloud Provider （支持 GCE、GKE 和 AWS）创建新的 Node，而在 Node 长时间资源利用","tags":["k8s","ca"],"title":"Cluster Autoscaler:集群自动扩缩容","type":"post","url":"/blog/201907/cluster-autoscaler-usage/","weight":0,"wordcount":2959},{"author":null,"categories":null,"content":null,"date":1562025600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1562025600,"objectID":"","permalink":"http://silenceper.com/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"silenceper","type":"page","url":"/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1539302400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539302400,"objectID":"ad9d135c0e518fad3cee81e96abe8c05","permalink":"http://silenceper.com/blog/201810/calico-in-k8s/","publishdate":"2018-10-12T00:00:00Z","readingtime":2,"relpermalink":"/blog/201810/calico-in-k8s/","section":"post","summary":"前提已经安装好k8s集群 安装 calico 安装其实很简单，已经集成在两个yaml文件中 calico 版本: v3.2.3 安装必看 如果安装过flannel组件，需要先去除dock","tags":["flannel"],"title":"k8s网络组件：calico","type":"post","url":"/blog/201810/calico-in-k8s/","weight":0,"wordcount":984},{"author":null,"categories":["Tech"],"content":null,"date":1537920000,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1537920000,"objectID":"28d48a0050ed7d6af2c798c2f9ca653f","permalink":"http://silenceper.com/blog/201809/flannel-in-k8s/","publishdate":"2018-09-26T00:00:00Z","readingtime":4,"relpermalink":"/blog/201809/flannel-in-k8s/","section":"post","summary":"Flannel是一个专门为k8s定制的网络解决方案，主要解决POD跨主机通信问题，这里主要讲述Flannel是如何实现的。 安装 集成在k8s上","tags":["flannel"],"title":"k8s网络组件：flannel","type":"post","url":"/blog/201809/flannel-in-k8s/","weight":0,"wordcount":1669},{"author":null,"categories":["Tech"],"content":"k8s源码包的作用，手动编译k8s源码以及如何阅读k8s源代码","date":1536723959,"description":"k8s源码包的作用，手动编译k8s源码以及如何阅读k8s源代码","dir":"post/","excerpt_html":"k8s源码包的作用，手动编译k8s源码以及如何阅读k8s源代码","excerpt_text":"k8s源码包的作用，手动编译k8s源码以及如何阅读k8s源代码","expirydate":-62135596800,"fuzzywordcount":700,"html":"k8s源码包的作用，手动编译k8s源码以及如何阅读k8s源代码","keywords":null,"kind":"page","lang":"en","lastmod":1536723959,"objectID":"c0fb1cda992a04f0265e2b635698dbcf","permalink":"http://silenceper.com/blog/201809/k8s-source-code-structure/","publishdate":"2018-09-12T11:45:59+08:00","readingtime":2,"relpermalink":"/blog/201809/k8s-source-code-structure/","section":"post","summary":"环境 k8s代码版本：release-1.9 工具：vscode, dlv 下载代码，并放入gopath中，方便编译： $ mkdir -p $GOPATH/src/k8s.io \u0026amp;\u0026amp; cd $GOPATH/src/k8s.io $ git clone https://github.com/kubernetes/kubernetes # 有墙 代码结","tags":["k8s"],"title":"k8s源码阅读(一)：源码结构","type":"post","url":"/blog/201809/k8s-source-code-structure","weight":0,"wordcount":613},{"author":null,"categories":["Tech"],"content":"通过修改docker service文件，使得在docker pull的时候使用代理","date":1536464759,"description":"通过修改docker service文件，使得在docker pull的时候使用代理","dir":"post/","excerpt_html":"通过修改docker service文件，使得在docker pull的时候使用代理","excerpt_text":"通过修改docker service文件，使得在docker pull的时候使用代理","expirydate":-62135596800,"fuzzywordcount":600,"html":"通过修改docker service文件，使得在docker pull的时候使用代理","keywords":null,"kind":"page","lang":"en","lastmod":1536464759,"objectID":"79a752469abf25f08f642f913c073dd6","permalink":"http://silenceper.com/blog/201809/over-the-wall-pull-docker-mirror/","publishdate":"2018-09-09T11:45:59+08:00","readingtime":2,"relpermalink":"/blog/201809/over-the-wall-pull-docker-mirror/","section":"post","summary":"我们一般通过设置http_proxy环境变量，使得http请求，可以走我们设置的proxy，（一些go get镜像无法下载可以这么用），但是对","tags":["docker"],"title":"docker pull 翻墙下载镜像","type":"post","url":"/blog/201809/over-the-wall-pull-docker-mirror","weight":0,"wordcount":505},{"author":null,"categories":["Tech"],"content":"主要是自己在搭建过程中整理的文档，如果来构建一个多节点的kubernetes集群，以服务的方式，注册到系统","date":1536291959,"description":"主要是自己在搭建过程中整理的文档，如果来构建一个多节点的kubernetes集群，以服务的方式，注册到系统","dir":"post/","excerpt_html":"主要是自己在搭建过程中整理的文档，如果来构建一个多节点的kubernetes集群，以服务的方式，注册到系统","excerpt_text":"主要是自己在搭建过程中整理的文档，如果来构建一个多节点的kubernetes集群，以服务的方式，注册到系统","expirydate":-62135596800,"fuzzywordcount":3900,"html":"主要是自己在搭建过程中整理的文档，如果来构建一个多节点的kubernetes集群，以服务的方式，注册到系统","keywords":null,"kind":"page","lang":"en","lastmod":1536291959,"objectID":"f919c0927aca33ab789e05d336179d3e","permalink":"http://silenceper.com/blog/201809/how-to-build-a-k8s-cluster/","publishdate":"2018-09-07T11:45:59+08:00","readingtime":8,"relpermalink":"/blog/201809/how-to-build-a-k8s-cluster/","section":"post","summary":"以下是我自己在部署k8s集群上做的一些记录，部署了一个master，一个node节点。 环境准备 我在VirtualBox中建的两个CentOS","tags":["k8s"],"title":"在CentOS上搭建Kubernetes集群","type":"post","url":"/blog/201809/how-to-build-a-k8s-cluster","weight":0,"wordcount":3804},{"author":null,"categories":["Tech"],"content":"","date":1479580859,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1479580859,"objectID":"e56ffd34058c6355c6c5ae0d6b8b1616","permalink":"http://silenceper.com/blog/201611/tcp_connection_pool/","publishdate":"2016-11-20T02:40:59+08:00","readingtime":5,"relpermalink":"/blog/201611/tcp_connection_pool/","section":"post","summary":"以下主要使用Golang作为编程语言 为什么需要连接池 我觉得使用连接池最大的一个好处就是减少连接的创建和关闭，增加系统负载能力， 之前就有遇到一","tags":["go","pool"],"title":"聊聊连接池","type":"post","url":"/blog/201611/tcp_connection_pool","weight":0,"wordcount":2400},{"author":null,"categories":["Tech"],"content":"","date":1474011659,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1474011659,"objectID":"0e8d73ef1e14ebc60af84b16935b138d","permalink":"http://silenceper.com/blog/201609/go-wechat-sdk/","publishdate":"2016-09-16T15:40:59+08:00","readingtime":1,"relpermalink":"/blog/201609/go-wechat-sdk/","section":"post","summary":"一直很想自己用golang写个微信的sdk，目标是简单好用，所以利用闲暇时间（周末，中秋😁），就做出来。 项目地址:https://githu","tags":["wechat","go"],"title":"开源项目：wechat sdk","type":"post","url":"/blog/201609/go-wechat-sdk","weight":0,"wordcount":237},{"author":null,"categories":["Tech"],"content":"","date":1470123659,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1470123659,"objectID":"aac3faa93cba44db23cee76f34c40f2e","permalink":"http://silenceper.com/blog/201608/dcmp/","publishdate":"2016-08-02T15:40:59+08:00","readingtime":1,"relpermalink":"/blog/201608/dcmp/","section":"post","summary":"Distributed Configuration Management Platform 提供了一个etcd的管理界面，可通过界面修改配置信息，借助confd可实现配置文件的同步。 GITHUB：https://github","tags":["dcmp","etcd","confd"],"title":"dcmp","type":"post","url":"/blog/201608/dcmp","weight":0,"wordcount":170},{"author":null,"categories":["Tech"],"content":"","date":1464429659,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1464429659,"objectID":"2fb6e78001f99ada6fd79a164825b720","permalink":"http://silenceper.com/blog/201605/go-http-process/","publishdate":"2016-05-28T18:00:59+08:00","readingtime":5,"relpermalink":"/blog/201605/go-http-process/","section":"post","summary":"一、执行流程 构建一个简单http server： package main import ( \u0026quot;log\u0026quot; \u0026quot;net/http\u0026quot; ) func main() { http.HandleFunc(\u0026quot;/\u0026quot;, func(w http.ResponseWriter, r *http.Request) { w.Write([]byte(\u0026quot;hello world\u0026quot;)) }) log.Fatal(http.ListenAndServe(\u0026quot;:8080\u0026quot;, nil)) } 使用http://127.0.0.1:8080/ 就","tags":["wechat","go"],"title":"Golang 中http包默认路由匹配规则阅读笔记","type":"post","url":"/blog/201605/go-http-process","weight":0,"wordcount":2108},{"author":null,"categories":["Tech"],"content":"time_wait 连接数过多","date":1451806859,"description":"time_wait 连接数过多","dir":"post/","excerpt_html":"time_wait 连接数过多","excerpt_text":"time_wait 连接数过多","expirydate":-62135596800,"fuzzywordcount":1400,"html":"time_wait 连接数过多","keywords":null,"kind":"page","lang":"en","lastmod":1451806859,"objectID":"4b8ec7b2f4ae269463499acd8cc340d4","permalink":"http://silenceper.com/blog/201601/tcp_time_wait_error/","publishdate":"2016-01-03T15:40:59+08:00","readingtime":3,"relpermalink":"/blog/201601/tcp_time_wait_error/","section":"post","summary":"问题出现： 在元旦前夕，自己维护的一个服务突然在高峰时期收到大量报警，赶紧登上服务器看一下： 最开始的反应是memcache tcp read time out ,因为之前也","tags":["tcp","mysql","go"],"title":"tcp time_wait问题","type":"post","url":"/blog/201601/tcp_time_wait_error","weight":0,"wordcount":1301}]